version: '3.9'


services:
  django:
    build: .
    container_name: django_web
    expose:
      - "8000"
    volumes:
      - .:/code # Bind . directory to /code in container
      - static_volume:/code/staticfiles
      # Because /code in container binded to . in local directory,
      #  so this named volume get it from code/staticfiles and 
      #  serve them persisting without depending on containers lifecycle
      - media_volume:/code/media
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      # Fix a bug for running tests in modules
      PYTHONPATH: ${PYTHONPATH}


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django

  db:
    image: postgres:15
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # There is a location which is /var/lib/docker/... in your local machine
      #  which store postgresdata but also it mounts to 
      #  /var/lib/postgresql/data/ on container to manage consistently
      #  between container and local machine. means it is persistent if container
      #  removed or stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  postgres_data:
  static_volume:
  media_volume:
